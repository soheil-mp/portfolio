{"ast":null,"code":"import { getBlogMetadata, getAllBlogSlugs } from '../utils/markdownParser';\nexport const blogPosts = getAllBlogSlugs().map(slug => getBlogMetadata(slug));\nexport const categories = [{\n  name: \"Trading Strategies\",\n  slug: \"trading-strategies\",\n  count: 2,\n  description: \"Quantitative trading strategies and implementation guides\"\n}, {\n  name: \"Portfolio Theory\",\n  slug: \"portfolio-theory\",\n  count: 1,\n  description: \"Modern portfolio theory and optimization techniques\"\n}, {\n  name: \"Algorithm Development\",\n  slug: \"algorithm-development\",\n  count: 1,\n  description: \"Development and optimization of trading algorithms\"\n}];\n\n// Helper functions\nexport const getFeaturedPosts = () => blogPosts.filter(post => post.featured);\nexport const getPostBySlug = slug => blogPosts.find(post => post.slug === slug);\nexport const getPostsByCategory = category => blogPosts.filter(post => post.category === category);\nexport const getAllTags = () => {\n  const tags = new Set();\n  blogPosts.forEach(post => {\n    post.tags.forEach(tag => tags.add(tag));\n  });\n  return Array.from(tags);\n};","map":{"version":3,"names":["getBlogMetadata","getAllBlogSlugs","blogPosts","map","slug","categories","name","count","description","getFeaturedPosts","filter","post","featured","getPostBySlug","find","getPostsByCategory","category","getAllTags","tags","Set","forEach","tag","add","Array","from"],"sources":["C:/Users/Soheil/Desktop/Codebase/GitHub/quant-blog/src/data/blogData.js"],"sourcesContent":["import { getBlogMetadata, getAllBlogSlugs } from '../utils/markdownParser';\r\n\r\nexport const blogPosts = getAllBlogSlugs().map(slug => getBlogMetadata(slug));\r\n\r\nexport const categories = [\r\n  {\r\n    name: \"Trading Strategies\",\r\n    slug: \"trading-strategies\",\r\n    count: 2,\r\n    description: \"Quantitative trading strategies and implementation guides\"\r\n  },\r\n  {\r\n    name: \"Portfolio Theory\",\r\n    slug: \"portfolio-theory\",\r\n    count: 1,\r\n    description: \"Modern portfolio theory and optimization techniques\"\r\n  },\r\n  {\r\n    name: \"Algorithm Development\",\r\n    slug: \"algorithm-development\",\r\n    count: 1,\r\n    description: \"Development and optimization of trading algorithms\"\r\n  }\r\n];\r\n\r\n// Helper functions\r\nexport const getFeaturedPosts = () => blogPosts.filter(post => post.featured);\r\n\r\nexport const getPostBySlug = (slug) => blogPosts.find(post => post.slug === slug);\r\n\r\nexport const getPostsByCategory = (category) => \r\n  blogPosts.filter(post => post.category === category);\r\n\r\nexport const getAllTags = () => {\r\n  const tags = new Set();\r\n  blogPosts.forEach(post => {\r\n    post.tags.forEach(tag => tags.add(tag));\r\n  });\r\n  return Array.from(tags);\r\n}; "],"mappings":"AAAA,SAASA,eAAe,EAAEC,eAAe,QAAQ,yBAAyB;AAE1E,OAAO,MAAMC,SAAS,GAAGD,eAAe,CAAC,CAAC,CAACE,GAAG,CAACC,IAAI,IAAIJ,eAAe,CAACI,IAAI,CAAC,CAAC;AAE7E,OAAO,MAAMC,UAAU,GAAG,CACxB;EACEC,IAAI,EAAE,oBAAoB;EAC1BF,IAAI,EAAE,oBAAoB;EAC1BG,KAAK,EAAE,CAAC;EACRC,WAAW,EAAE;AACf,CAAC,EACD;EACEF,IAAI,EAAE,kBAAkB;EACxBF,IAAI,EAAE,kBAAkB;EACxBG,KAAK,EAAE,CAAC;EACRC,WAAW,EAAE;AACf,CAAC,EACD;EACEF,IAAI,EAAE,uBAAuB;EAC7BF,IAAI,EAAE,uBAAuB;EAC7BG,KAAK,EAAE,CAAC;EACRC,WAAW,EAAE;AACf,CAAC,CACF;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAMP,SAAS,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC;AAE7E,OAAO,MAAMC,aAAa,GAAIT,IAAI,IAAKF,SAAS,CAACY,IAAI,CAACH,IAAI,IAAIA,IAAI,CAACP,IAAI,KAAKA,IAAI,CAAC;AAEjF,OAAO,MAAMW,kBAAkB,GAAIC,QAAQ,IACzCd,SAAS,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACK,QAAQ,KAAKA,QAAQ,CAAC;AAEtD,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9B,MAAMC,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;EACtBjB,SAAS,CAACkB,OAAO,CAACT,IAAI,IAAI;IACxBA,IAAI,CAACO,IAAI,CAACE,OAAO,CAACC,GAAG,IAAIH,IAAI,CAACI,GAAG,CAACD,GAAG,CAAC,CAAC;EACzC,CAAC,CAAC;EACF,OAAOE,KAAK,CAACC,IAAI,CAACN,IAAI,CAAC;AACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}