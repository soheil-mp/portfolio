{"ast":null,"code":"import { getBlogMetadata, getAllBlogSlugs, getAllBlogPosts } from '../utils/markdownParser';\n\n// Export the main function to get all blog posts\nexport const getBlogPosts = getAllBlogPosts;\nexport const categories = [{\n  name: \"Trading Strategies\",\n  slug: \"trading-strategies\",\n  count: 2,\n  description: \"Quantitative trading strategies and implementation guides\"\n}, {\n  name: \"Portfolio Theory\",\n  slug: \"portfolio-theory\",\n  count: 1,\n  description: \"Modern portfolio theory and optimization techniques\"\n}, {\n  name: \"Algorithm Development\",\n  slug: \"algorithm-development\",\n  count: 1,\n  description: \"Development and optimization of trading algorithms\"\n}];\n\n// Helper functions\nexport const getFeaturedPosts = async () => {\n  const posts = await getBlogPosts();\n  return posts.filter(post => post.featured);\n};\nexport const getPostBySlug = async slug => {\n  return await getBlogMetadata(slug);\n};\nexport const getPostsByCategory = async category => {\n  const posts = await getBlogPosts();\n  return posts.filter(post => post.category === category);\n};\nexport const getAllTags = async () => {\n  const posts = await getBlogPosts();\n  const tags = new Set();\n  posts.forEach(post => {\n    if (post.tags) {\n      post.tags.forEach(tag => tags.add(tag));\n    }\n  });\n  return Array.from(tags);\n};","map":{"version":3,"names":["getBlogMetadata","getAllBlogSlugs","getAllBlogPosts","getBlogPosts","categories","name","slug","count","description","getFeaturedPosts","posts","filter","post","featured","getPostBySlug","getPostsByCategory","category","getAllTags","tags","Set","forEach","tag","add","Array","from"],"sources":["C:/Users/Soheil/Desktop/Codebase/GitHub/quant-blog/src/data/blogData.js"],"sourcesContent":["import { getBlogMetadata, getAllBlogSlugs, getAllBlogPosts } from '../utils/markdownParser';\r\n\r\n// Export the main function to get all blog posts\r\nexport const getBlogPosts = getAllBlogPosts;\r\n\r\nexport const categories = [\r\n  {\r\n    name: \"Trading Strategies\",\r\n    slug: \"trading-strategies\",\r\n    count: 2,\r\n    description: \"Quantitative trading strategies and implementation guides\"\r\n  },\r\n  {\r\n    name: \"Portfolio Theory\",\r\n    slug: \"portfolio-theory\",\r\n    count: 1,\r\n    description: \"Modern portfolio theory and optimization techniques\"\r\n  },\r\n  {\r\n    name: \"Algorithm Development\",\r\n    slug: \"algorithm-development\",\r\n    count: 1,\r\n    description: \"Development and optimization of trading algorithms\"\r\n  }\r\n];\r\n\r\n// Helper functions\r\nexport const getFeaturedPosts = async () => {\r\n  const posts = await getBlogPosts();\r\n  return posts.filter(post => post.featured);\r\n};\r\n\r\nexport const getPostBySlug = async (slug) => {\r\n  return await getBlogMetadata(slug);\r\n};\r\n\r\nexport const getPostsByCategory = async (category) => {\r\n  const posts = await getBlogPosts();\r\n  return posts.filter(post => post.category === category);\r\n};\r\n\r\nexport const getAllTags = async () => {\r\n  const posts = await getBlogPosts();\r\n  const tags = new Set();\r\n  posts.forEach(post => {\r\n    if (post.tags) {\r\n      post.tags.forEach(tag => tags.add(tag));\r\n    }\r\n  });\r\n  return Array.from(tags);\r\n}; "],"mappings":"AAAA,SAASA,eAAe,EAAEC,eAAe,EAAEC,eAAe,QAAQ,yBAAyB;;AAE3F;AACA,OAAO,MAAMC,YAAY,GAAGD,eAAe;AAE3C,OAAO,MAAME,UAAU,GAAG,CACxB;EACEC,IAAI,EAAE,oBAAoB;EAC1BC,IAAI,EAAE,oBAAoB;EAC1BC,KAAK,EAAE,CAAC;EACRC,WAAW,EAAE;AACf,CAAC,EACD;EACEH,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE,CAAC;EACRC,WAAW,EAAE;AACf,CAAC,EACD;EACEH,IAAI,EAAE,uBAAuB;EAC7BC,IAAI,EAAE,uBAAuB;EAC7BC,KAAK,EAAE,CAAC;EACRC,WAAW,EAAE;AACf,CAAC,CACF;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAMC,KAAK,GAAG,MAAMP,YAAY,CAAC,CAAC;EAClC,OAAOO,KAAK,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC;AAC5C,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAOR,IAAI,IAAK;EAC3C,OAAO,MAAMN,eAAe,CAACM,IAAI,CAAC;AACpC,CAAC;AAED,OAAO,MAAMS,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;EACpD,MAAMN,KAAK,GAAG,MAAMP,YAAY,CAAC,CAAC;EAClC,OAAOO,KAAK,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACI,QAAQ,KAAKA,QAAQ,CAAC;AACzD,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMP,KAAK,GAAG,MAAMP,YAAY,CAAC,CAAC;EAClC,MAAMe,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;EACtBT,KAAK,CAACU,OAAO,CAACR,IAAI,IAAI;IACpB,IAAIA,IAAI,CAACM,IAAI,EAAE;MACbN,IAAI,CAACM,IAAI,CAACE,OAAO,CAACC,GAAG,IAAIH,IAAI,CAACI,GAAG,CAACD,GAAG,CAAC,CAAC;IACzC;EACF,CAAC,CAAC;EACF,OAAOE,KAAK,CAACC,IAAI,CAACN,IAAI,CAAC;AACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}